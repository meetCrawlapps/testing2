/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    landingpage_data: LandingpageDatum;
    map: Map;
    'header-footer': HeaderFooter;
    feedback: Feedback;
    questions: Question;
    network: Network;
    about: About;
    aboutpage: Aboutpage;
    'privacy-policy': PrivacyPolicy;
    'terms-and-condition': TermsAndCondition;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "landingpage_data".
 */
export interface LandingpageDatum {
  id: string;
  TitleBold: string;
  TitleNormal: string;
  HelpText: string;
  FocusImage: string | Media;
  Focusheading: string;
  FocusSubHeading: string;
  FocusAdvantages?:
    | {
        Advantage?: string | null;
        id?: string | null;
      }[]
    | null;
  TrustedCompanes: {
    TrustedCompanesImage: string | Media;
    id?: string | null;
  }[];
  ApproachAndExpertiseImage: string | Media;
  ApproachAndExpertiseHeading: string;
  ApproachAndExpertiseSubHeading: string;
  ApproachAndExpertiseTopDiscription: string;
  Expertise?:
    | {
        ExpertiseImage: string | Media;
        Expertise?: string | null;
        ExpertiseSubText?: string | null;
        id?: string | null;
      }[]
    | null;
  WhyChooseSubText: string;
  WhyChooseAttributes: {
    WhyChooseAttributesImage: string | Media;
    WhyChooseAttributeTitle: string;
    WhyChooseAttributeText: string;
    id?: string | null;
  }[];
  Partners: {
    PartnerImage: string | Media;
    PartnersComapanysImage: string | Media;
    PartnerInformation: string;
    PartnerOtherDetail: string;
    PartnerPosition: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "map".
 */
export interface Map {
  id: string;
  Locations: {
    PlaceName: string;
    ExactLocation: string;
    Latitude: number;
    Longitude: number;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header-footer".
 */
export interface HeaderFooter {
  id: string;
  LightLogo: string | Media;
  DarkLogo: string | Media;
  Phone: string;
  FooterText: string;
  CopyrightString: string;
  socialMediaLinks?:
    | {
        platform?: ('facebook' | 'twitter' | 'instagram' | 'call' | 'mail') | null;
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feedback".
 */
export interface Feedback {
  id: string;
  FeedBackTitle: string;
  FeedBackSubTitle: string;
  FeedBackCards: {
    FeedBackCardImage: string | Media;
    TestimonialImage: string | Media;
    FeedBackTitle: string;
    FeedBackSubText: string;
    TestimonialName: string;
    Date: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions".
 */
export interface Question {
  id: string;
  Question: string;
  QuestionSubText: string;
  email: string;
  phone: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "network".
 */
export interface Network {
  id: string;
  NetworkHeading: string;
  NetworkSubText: string;
  NetworkFigure: {
    NetworkImage: string | Media;
    NetworkImageTitle: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: string;
  AboutUsHeading: string;
  AboutUsSubText: string;
  AboutUsAttributes?:
    | {
        AboutUsAttributeMainImage: string | Media;
        AboutUsAttributeSubImage: string | Media;
        AboutUsAttributeTitle: string;
        AboutUsAttributeSubTitle: string;
        AboutUsAttributeAdvantages: {
          AboutUsAttributeAdvantage: string;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutpage".
 */
export interface Aboutpage {
  id: string;
  AboutHeader: string;
  AboutSubheader: string;
  OwnerName: string;
  OwnerSubText: string;
  OwnerDetails: string;
  OwnerImage: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-policy".
 */
export interface PrivacyPolicy {
  id: string;
  PrivacyPolicyTitle: string;
  PrivacyPolicySubText: string;
  PrivacyPolicyContent: {
    question?: string | null;
    answer?:
      | {
          answer_text?: string | null;
          id?: string | null;
        }[]
      | null;
    note?: string | null;
    notify?: string | null;
    notify_way?:
      | {
          notify_way_text?: string | null;
          id?: string | null;
        }[]
      | null;
    requirements?:
      | {
          requirment?: string | null;
          id?: string | null;
        }[]
      | null;
    points?:
      | {
          point?: string | null;
          id?: string | null;
        }[]
      | null;
    title?: string | null;
    desc?: string | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "terms-and-condition".
 */
export interface TermsAndCondition {
  id: string;
  TermsAndConditionTitle: string;
  TermsAndConditionSubText: string;
  TermsAndConditionContent: {
    title?: string | null;
    desc?:
      | {
          desc_text?: string | null;
          id?: string | null;
        }[]
      | null;
    note?: string | null;
    points?:
      | {
          point?: string | null;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}